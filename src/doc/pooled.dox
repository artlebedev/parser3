/**	@page Pooled  Pooled: работа с памятью

Работа с памятью происходит так: все выделения происходят через Pool::malloc и Pool::calloc,
для удобства имеется Pooled родитель, инкапсулирующий класс Pool, и имеющий одноимённые обёртки:
Pooled::malloc и Pooled::calloc, а также функцию Pooled::pool() для доступа к самому pool'у.
Когда освобождается память зависит от варианта сборки:
- Apache: делает это сам;
- CGI: вообще ничего не освобождает, смерть процесса всё списывает;
- ISAPI extension: освобождается в Pooled:~Pooled().

Все исключения в Parser имеют тип Exception, если возникает проблема, 
следует бросить C++ исключение этого типа
@code
	throw Exception("класс ошибки",
		&method_name, // адрес String, содержащей текст/место ошибки
		"проблема %d", error_code);
@endcode

"Класс ошибки" следует задать один из <a href="http://parser.ru/docs/lang/parserexceptions.htm">системных</a>, 
придумать хороших свой, или не задавать вовсе.
*/