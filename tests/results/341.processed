Content-Type: text/html
Content-Length: 3358

I. named
Code coverage tests:
Exception type: parser.runtime,
Source: wrong,
Comment: must be 'hash', 'table' or 'string'
Exception type: parser.runtime,
Source: hash,
Comment: 'type' must be string
Exception type: parser.runtime,
Source: hash,
Comment: called with invalid option
Exception type: parser.runtime,
Source: hash,
Comment: options must be hash
Exception type: parser.runtime,
Source: hash,
Comment: value field(s) must be string or table or code
Exception type: parser.runtime,
Source: hash,
Comment: you can't specify more then one value field with option $.type[string]
Exception type: parser.runtime,
Source: hash,
Comment: you can't specify $.type[] if value is code
Exception type: parser.runtime,
Source: ups,
Comment: column not found
Exception type: parser.runtime,
Source: ups,
Comment: column not found
Valid calls tests:
1. {
"1":{
"id":"1",
"price":"6.50"
},
"2":{
"id":"2",
"price":"70.00",
"2":"",
"3":"more data"
},
"3":{
"id":"3",
"price":"60.85"
}
}
2. {
"1":[
{"id":"1","price":"6.50"}
],
"2":[
{"id":"2","price":"70.00","2":"","3":"more data"}
],
"3":[
{"id":"3","price":"60.85"}
]
}
3. {
"1":{
"price":"6.50"
},
"2":{
"price":"70.00"
},
"3":{
"price":"60.85"
}
}
4. {
"id":{
"price":"6.50"
}
}
5. {
"1":{
"id":"1",
"price":"6.50"
},
"2":{
"id":"2",
"price":"70.00"
},
"3":{
"id":"3",
"price":"60.85"
}
}
6. {
"id":{
"id":"1",
"price":"6.50"
}
}
New functionality tests:
n1. {
"=1=":"1 - 6.50",
"=2=":"2 - 70.00",
"=3=":"3 - 60.85",
"=_default=":"_default - 0"
}
n2. {
"1":"1 - 6.50",
"2":"2 - 70.00",
"3":"3 - 60.85"
}
n3. {
"id":"code"
}
n4. {
"1":{
"key":"6.50"
},
"2":{
"key":"70.00"
},
"3":{
"key":"60.85"
}
}
n5. {
"1":{},
"2":{},
"3":{}
}
n6. {
"1":"",
"2":"",
"3":""
}
II. nameless
Code coverage tests:
Exception type: parser.runtime,
Source: wrong,
Comment: must be 'hash', 'table' or 'string'
Exception type: parser.runtime,
Source: hash,
Comment: 'type' must be string
Exception type: parser.runtime,
Source: hash,
Comment: called with invalid option
Exception type: parser.runtime,
Source: hash,
Comment: options must be hash
Exception type: parser.runtime,
Source: hash,
Comment: value field(s) must be string or table or code
Exception type: parser.runtime,
Source: hash,
Comment: you can't specify more then one value field with option $.type[string]
Exception type: parser.runtime,
Source: hash,
Comment: you can't specify $.type[] if value is code
Exception type: number.format,
Source: ups,
Comment: invalid number (int)
Exception type: number.format,
Source: ups,
Comment: invalid number (int)
Valid calls tests:
1. {
"1":{
"0":"1",
"1":"6.50"
},
"2":{
"0":"2",
"1":"70.00",
"2":"",
"3":"more data"
},
"3":{
"0":"3",
"1":"60.85"
}
}
2. {
"1":[
{"0":"1","1":"6.50"}
],
"2":[
{"0":"2","1":"70.00","2":"","3":"more data"}
],
"3":[
{"0":"3","1":"60.85"}
]
}
3. {
"1":{
"1":"6.50"
},
"2":{
"1":"70.00"
},
"3":{
"1":"60.85"
}
}
4. {
"0":{
"1":"6.50"
}
}
5. {
"1":{
"0":"1",
"1":"6.50"
},
"2":{
"0":"2",
"1":"70.00"
},
"3":{
"0":"3",
"1":"60.85"
}
}
6. {
"0":{
"0":"1",
"1":"6.50"
}
}
New functionality tests:
n1. {
"=1=":"1 - 6.50",
"=2=":"2 - 70.00",
"=3=":"3 - 60.85",
"=_default=":"_default - 0"
}
n2. {
"1":"1 - 6.50",
"2":"2 - 70.00",
"3":"3 - 60.85"
}
n3. {
"0":"code"
}
n4. {
"1":{
"key":"6.50"
},
"2":{
"key":"70.00"
},
"3":{
"key":"60.85"
}
}
n5. {
"1":{},
"2":{},
"3":{}
}
n6. {
"1":"",
"2":"",
"3":""
}