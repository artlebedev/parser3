Content-Type: text/html
Content-Length: 3692

code coverage tests:
1. int
1.1 1
1.2 0
1.3 1
1.4 2
2. double
2.1 1.1
3. bool
3.1 1
3.2 true
4. inet
4.1 Exception type: parser.runtime,
Source: aton,
Comment: Invalid IP address '1.1.1.300' specified.
4.2 Exception type: parser.runtime,
Source: aton,
Comment: Invalid IP address 'a.b.c.d' specified.
4.5 Exception type: parser.runtime,
Source: ip2name,
Comment: IP address must not be empty.
4.6 Exception type: parser.runtime,
Source: ip2name,
Comment: called with invalid option
4.7 Exception type: parser.runtime,
Source: invalid,
Comment: ipv option value must be 4 or 6 or any
4.8 Exception type: parser.runtime,
Source: ip2name,
Comment: Invalid IP address '1.1.1.300' specified
4.9 Exception type: parser.runtime,
Source: ip2name,
Comment: Invalid IP address &apos;1.1.1.1&apos;
4.11 Exception type: parser.runtime,
Source: name2ip,
Comment: Domain name must not be empty.
4.12 Exception type: parser.runtime,
Source: name2ip,
Comment: called with invalid option
4.13 Exception type: parser.runtime,
Source: name2ip,
Comment: Can&apos;t resolve domain name &apos;no-such-domain.xn--80acdhdbb7b5bu.xn--p1ai&apos;
4.14 ::1 5. math
5.1 0
5.2 Exception type: parser.runtime,
Source: random,
Comment: top(10000000000) must be [1..2147483647]
5.4 Exception type: parser.runtime,
Source: shaX,
Comment: must be 'md5' or 'sha1' or 'sha256' or 'sha512'
5.5 Exception type: parser.runtime,
Source: unknown,
Comment: must be 'hex' or 'base64'
5.6 Exception type: parser.runtime,
Source: digest,
Comment: called with invalid option
5.10 Exception type: parser.runtime,
Source: convert,
Comment: base 'from' must be an integer from 2 to 16 or 256
5.11 Exception type: parser.runtime,
Source: convert,
Comment: base 'to' must be an integer from 2 to 16 or 256
5.12 5.13 255
6. string
6.1 Exception type: parser.runtime,
Source: int,
Comment: unable to convert empty string without default specified
6.2 Exception type: parser.runtime,
Source: double,
Comment: unable to convert empty string without default specified
6.3 Exception type: parser.runtime,
Source: bool,
Comment: unable to convert empty string without default specified
6.4 Exception type: parser.runtime,
Source: bool,
Comment: default must be bool (parameter #1)
6.5 Exception type: number.format,
Source: bug,
Comment: invalid number (int)
6.6 true
6.7 Exception type: parser.runtime,
Source: pos,
Comment: n(-1) must be >=0
6.8 [
	{"piece":"c"},
	{"piece":"b"},
	{"piece":"a"}
]
6.9 [
	{"0":"b,c","1":"a"}
]
6.10 Exception type: parser.runtime,
Source: hv,
Comment: conflicting split options
6.11 Exception type: parser.runtime,
Source: base64,
Comment: called with invalid option
6.12 Exception type: parser.runtime,
Source: unescape,
Comment: called with invalid option
6.13 Exception type: parser.runtime,
Source: no-such-mode,
Comment: is an invalid mode, must be either 'js' or 'uri'
6.14 any thing 6.15 Exception type: parser.runtime,
Source: no-such-mode,
Comment: unknown mode, must be 'append'
7. file
7.1 Exception type: parser.runtime,
Source: base64,
Comment: constructor cannot have less than 3 parameters (has 2 parameters)
7.2 Exception type: parser.runtime,
Source: base64,
Comment: mode must be string (parameter #1 is 'junction')
7.3 Exception type: parser.runtime,
Source: base64,
Comment: called with invalid option
7.4 Exception type: base64.format,
Source: base64,
Comment: Unexpected end of chars
7.5 {
"class":"file",
"name":"fname.text",
"size":4,
"mode":"text",
"content-type":"strange"
}
7.10 /fname.txt
7.11 /tests/fname.txt
7.15 Exception type: parser.runtime,
Source: list,
Comment: called with invalid option
7.15 Exception type: parser.runtime,
Source: list,
Comment: filter must be regex or string
